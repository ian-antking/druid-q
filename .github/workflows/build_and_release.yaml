name: Build and Release Wheels

on:
  push:
    tags:
      - 'events-v*'
      - 'publisher-v*'
      - 'subscriber-v*'

jobs:
  build-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [events, publisher, subscriber]

    steps:
      - uses: actions/checkout@v3

      - name: Extract package name from tag
        id: extract
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          PACKAGE=${TAG%%-*}
          echo "package=$PACKAGE" >> $GITHUB_OUTPUT

      - name: Build ${{ matrix.package }} wheel
        if: matrix.package == steps.extract.outputs.package
        working-directory: ./common/${{ matrix.package }}
        run: |
          python -m pip install --upgrade build
          python -m build --wheel

      - name: Upload wheel artifact
        if: matrix.package == steps.extract.outputs.package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-wheel
          path: ./common/${{ matrix.package }}/dist/*.whl

  release:
    needs: build-packages
    runs-on: ubuntu-latest

    steps:
      - name: Extract package name from tag
        id: extract
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          PACKAGE=${TAG%%-*}
          echo "package=$PACKAGE" >> $GITHUB_OUTPUT

      - name: Download ${{ steps.extract.outputs.package }} wheel
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.extract.outputs.package }}-wheel
          path: ./dist/${{ steps.extract.outputs.package }}

      - name: Create or update GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Automated release of ${{ steps.extract.outputs.package }} wheel.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload wheel to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/${{ steps.extract.outputs.package }}/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
